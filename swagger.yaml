# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Kloudery API
  description: Fund open software while instantly deploying web applications
  version: "1.0.0"
# the domain of the service
host: api.kloudery.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /products:
    get:
      summary: Product Types
      description: |
        The Products endpoint returns a list of kloudery applications and their prices.
      parameters:
        - name: application
          in: query
          description: Latitude component of location.
          required: true
          type: string
          format: double
        - name: price
          in: query
          description: Application Price
          required: true
          type: number
          format: double
      tags:
        - Products
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The /me enpoint returns information about the API user account
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with kloudery. The response will include container rentals, times, and prices.  
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Your container's hash code
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      image:
        type: string
        description: Image URL representing the product.
  Profile:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Kloudery user.
      last_name:
        type: string
        description: Last name of the Kloudery user.
      email:
        type: string
        description: Email address of the Kloudery user
      picture:
        type: string
        description: Image URL of the Kloudery user.
      promo_code:
        type: string
        description: Promo code of the Kloudery user.
  Activity:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
